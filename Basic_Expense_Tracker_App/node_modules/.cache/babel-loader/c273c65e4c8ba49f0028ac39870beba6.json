{"ast":null,"code":"var _jsxFileName = \"/Users/iantaylor/Desktop/WEB/REACT/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpensesFilter from '../Filter/ExpensesFilter';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [selectedDate, dateFilterSelected] = useState('2020');\n\n  const filterChangeHandler = selectedYear => {\n    dateFilterSelected(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === selectedDate;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 27\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: selectedDate,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"Yckyt31wQcHzstuT6xNBeCF7jvg=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/iantaylor/Desktop/WEB/REACT/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpensesFilter","ExpenseItem","Card","Expenses","props","selectedDate","dateFilterSelected","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAACC,YAAD,EAAeC,kBAAf,IAAqCP,QAAQ,CAAC,MAAD,CAAnD;;AAEA,QAAMQ,mBAAmB,GAAGC,YAAY,IAAI;AACxCF,IAAAA,kBAAkB,CAACE,YAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;AACnD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACH,GAFwB,CAAzB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACnC,QAAC,WAAD;AAEI,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFnB;AAGI,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHpB;AAII,MAAA,IAAI,EAAER,OAAO,CAACC;AAJlB,OACSD,OAAO,CAACS,EADjB;AAAA;AAAA;AAAA;AAAA,YADc,CAAlB;AAQH;;AAED,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACI,QAAC,cAAD;AACI,MAAA,QAAQ,EAAEhB,YADd;AAEI,MAAA,cAAc,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKS,eALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAnCD;;GAAMb,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport ExpensesFilter from '../Filter/ExpensesFilter';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n\n    const [selectedDate, dateFilterSelected] = useState('2020');\n\n    const filterChangeHandler = selectedYear => {\n        dateFilterSelected(selectedYear);\n    }\n\n    const filteredExpenses = props.items.filter(expense => {\n        return expense.date.getFullYear().toString() === selectedDate;\n    })\n\n    let expensesContent = <p>No expenses found.</p>\n\n    if (filteredExpenses.length > 0) {\n        expensesContent = filteredExpenses.map((expense) => (\n            <ExpenseItem\n                key={expense.id}\n                title={expense.title}\n                amount={expense.amount}\n                date={expense.date}\n            />\n        ))\n    }\n\n    return (\n        <Card className=\"expenses\">\n            <ExpensesFilter\n                selected={selectedDate}\n                onChangeFilter={filterChangeHandler}\n            />\n            {expensesContent}\n\n        </Card>\n    );\n}\n\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}