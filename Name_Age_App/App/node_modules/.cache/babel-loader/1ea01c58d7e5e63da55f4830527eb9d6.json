{"ast":null,"code":"var _jsxFileName = \"/Users/iantaylor/Desktop/WEB/REACT/Name_Age_App/App/src/components/User/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport classes from './AddUser.module.css';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUsername, setEnteredUsername] = useState(\"\");\n\n  const usernameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const [enteredAge, setEnteredAge] = useState(\"\");\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  const addUserHandler = event => {\n    event.preventDefault();\n\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        massage: 'Please enter a valid name and age (> 0).'\n      });\n      return;\n    }\n\n    if (+enteredAge < 1) {\n      setError({\n        title: 'Invalid age',\n        massage: 'Please enter a valid age (non-empty values).'\n      });\n      return;\n    }\n\n    props.onAddUser(enteredUsername, enteredAge); //console.log(\"Name: \" + enteredUsername + \" Age: \" + enteredAge);\n\n    setEnteredUsername(\"\");\n    setEnteredAge(\"\");\n  };\n\n  const [error, setError] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          onChange: usernameChangeHandler,\n          value: enteredUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"age\",\n          onChange: ageChangeHandler,\n          value: enteredAge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}; // The button class wraps the basic HTML functionalty enabling us to use it as a normal button with extra visual effects.\n\n\n_s(AddUser, \"bqAxUgdtt7Keuw4yuU4WXWGzYZM=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/iantaylor/Desktop/WEB/REACT/Name_Age_App/App/src/components/User/AddUser.js"],"names":["React","useState","Card","classes","Button","ErrorModal","AddUser","props","enteredUsername","setEnteredUsername","usernameChangeHandler","event","target","value","enteredAge","setEnteredAge","ageChangeHandler","addUserHandler","preventDefault","trim","length","setError","title","massage","onAddUser","error","message","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAGvB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;;AACA,QAAMS,qBAAqB,GAAIC,KAAD,IAAW;AACrCF,IAAAA,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACH,GAFD;;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMe,gBAAgB,GAAIL,KAAD,IAAW;AAChCI,IAAAA,aAAa,CAACJ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMI,cAAc,GAAGN,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACO,cAAN;;AAEA,QAAIV,eAAe,CAACW,IAAhB,GAAuBC,MAAvB,KAAkC,CAAlC,IAAuCN,UAAU,CAACK,IAAX,GAAkBC,MAAlB,KAA6B,CAAxE,EAA2E;AACvEC,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAAR;AACA;AACH;;AAED,QAAI,CAACT,UAAD,GAAc,CAAlB,EAAqB;AACjBO,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,KAAK,EAAE,aAAT;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAAD,CAAR;AACA;AACH;;AACDhB,IAAAA,KAAK,CAACiB,SAAN,CAAgBhB,eAAhB,EAAiCM,UAAjC,EAZ4B,CAa5B;;AACAL,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAM,IAAAA,aAAa,CAAC,EAAD,CAAb;AACH,GAhBD;;AAkBA,QAAM,CAACU,KAAD,EAAQJ,QAAR,IAAoBpB,QAAQ,EAAlC;AAEA,sBACI;AAAA,eACMwB,KAAK,iBAAI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEA,KAAK,CAACH,KAAzB;AAAgC,MAAA,OAAO,EAAEG,KAAK,CAACC;AAA/C;AAAA;AAAA;AAAA;AAAA,YADf,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEvB,OAAO,CAACwB,KAAzB;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEV,cAAhB;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,UAAtB;AAAiC,UAAA,QAAQ,EAAEP,qBAA3C;AAAkE,UAAA,KAAK,EAAEF;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,EAAE,EAAC,KAAxB;AAA8B,UAAA,QAAQ,EAAEQ,gBAAxC;AAA0D,UAAA,KAAK,EAAEF;AAAjE;AAAA;AAAA;AAAA;AAAA,gBALJ,eAOI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CApDD,C,CAsDA;;;GAtDMR,O;;KAAAA,O;AAwDN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport classes from './AddUser.module.css';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\n\nconst AddUser = (props) => {\n\n\n    const [enteredUsername, setEnteredUsername] = useState(\"\");\n    const usernameChangeHandler = (event) => {\n        setEnteredUsername(event.target.value);\n    }\n\n    const [enteredAge, setEnteredAge] = useState(\"\");\n\n    const ageChangeHandler = (event) => {\n        setEnteredAge(event.target.value);\n    }\n\n    const addUserHandler = event => {\n        event.preventDefault();\n\n        if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n            setError({ title: 'Invalid input', massage: 'Please enter a valid name and age (> 0).' });\n            return;\n        }\n\n        if (+enteredAge < 1) {\n            setError({ title: 'Invalid age', massage: 'Please enter a valid age (non-empty values).' });\n            return;\n        }\n        props.onAddUser(enteredUsername, enteredAge);\n        //console.log(\"Name: \" + enteredUsername + \" Age: \" + enteredAge);\n        setEnteredUsername(\"\");\n        setEnteredAge(\"\");\n    };\n\n    const [error, setError] = useState();\n\n    return (\n        <div>\n            { error && <ErrorModal title={error.title} message={error.message} />}\n            <Card className={classes.input}>\n                <form onSubmit={addUserHandler}>\n                    <label htmlFor=\"username\">User Name</label>\n                    <input type=\"text\" id=\"username\" onChange={usernameChangeHandler} value={enteredUsername} />\n\n                    <label htmlFor=\"age\">Age</label>\n                    <input type=\"number\" id=\"age\" onChange={ageChangeHandler} value={enteredAge} />\n\n                    <Button type=\"submit\">Add User</Button>\n                </form >\n            </Card>\n        </div >\n\n\n    );\n}\n\n// The button class wraps the basic HTML functionalty enabling us to use it as a normal button with extra visual effects.\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}