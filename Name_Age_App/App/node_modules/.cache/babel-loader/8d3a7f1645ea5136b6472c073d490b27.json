{"ast":null,"code":"var _jsxFileName = \"/Users/iantaylor/Desktop/WEB/REACT/Name_Age_App/App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddUser from './components/AddUser/AddUser';\nimport './App.css';\nimport UserList from './components/UserList/UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([{\n    name: 'Do all exercises!',\n    age: '41',\n    id: 'g1'\n  }]);\n\n  const addUserHandler = enteredText => {\n    setUsers(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({\n        name: enteredText,\n        id: Math.random().toString()\n      });\n      return updatedGoals;\n    });\n  };\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: \"No goals found. Maybe add one?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n\n  if (users.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(UserList, {\n      items: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"goal-form\",\n      children: /*#__PURE__*/_jsxDEV(AddUser, {\n        onAddGoal: addUserHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goals\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"spG7d+H/ES3ZkENjM+QEePRLac0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/iantaylor/Desktop/WEB/REACT/Name_Age_App/App/src/App.js"],"names":["React","useState","AddUser","UserList","App","users","setUsers","name","age","id","addUserHandler","enteredText","prevGoals","updatedGoals","unshift","Math","random","toString","content","textAlign","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,gCAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAC;AAAEM,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA,GAAG,EAAE,IAAlC;AAAwCC,IAAAA,EAAE,EAAE;AAA5C,GAAD,CAAD,CAAlC;;AAEA,QAAMC,cAAc,GAAGC,WAAW,IAAI;AACpCL,IAAAA,QAAQ,CAACM,SAAS,IAAI;AACpB,YAAMC,YAAY,GAAG,CAAC,GAAGD,SAAJ,CAArB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB;AAAEP,QAAAA,IAAI,EAAEI,WAAR;AAAqBF,QAAAA,EAAE,EAAEM,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAzB,OAArB;AACA,aAAOJ,YAAP;AACD,KAJO,CAAR;AAKD,GAND;;AAQA,MAAIK,OAAO,gBACT;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,MAAId,KAAK,CAACe,MAAN,GAAe,CAAnB,EAAsB;AACpBF,IAAAA,OAAO,gBACL,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEb;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEK;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAS,MAAA,EAAE,EAAC,OAAZ;AAAA,gBACGQ;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA/BQd,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport AddUser from './components/AddUser/AddUser';\nimport './App.css';\nimport UserList from './components/UserList/UserList';\n\nfunction App() {\n  const [users, setUsers] = useState([{ name: 'Do all exercises!', age: '41', id: 'g1' }]);\n\n  const addUserHandler = enteredText => {\n    setUsers(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({ name: enteredText, id: Math.random().toString() });\n      return updatedGoals;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  if (users.length > 0) {\n    content = (\n      <UserList items={users} />\n    );\n  }\n\n  return (\n    <div>\n      <div id=\"goal-form\">\n        <AddUser onAddGoal={addUserHandler} />\n      </div>\n      <section id=\"goals\">\n        {content}\n      </section>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}